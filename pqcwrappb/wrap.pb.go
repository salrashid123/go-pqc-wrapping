// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.25.1
// source: pqcwrappb/wrap.proto

package pqcwrappb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret_KeyType int32

const (
	Secret_ml_kem_512  Secret_KeyType = 0
	Secret_ml_kem_768  Secret_KeyType = 1
	Secret_ml_kem_1024 Secret_KeyType = 2
)

// Enum value maps for Secret_KeyType.
var (
	Secret_KeyType_name = map[int32]string{
		0: "ml_kem_512",
		1: "ml_kem_768",
		2: "ml_kem_1024",
	}
	Secret_KeyType_value = map[string]int32{
		"ml_kem_512":  0,
		"ml_kem_768":  1,
		"ml_kem_1024": 2,
	}
)

func (x Secret_KeyType) Enum() *Secret_KeyType {
	p := new(Secret_KeyType)
	*p = x
	return p
}

func (x Secret_KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_pqcwrappb_wrap_proto_enumTypes[0].Descriptor()
}

func (Secret_KeyType) Type() protoreflect.EnumType {
	return &file_pqcwrappb_wrap_proto_enumTypes[0]
}

func (x Secret_KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_KeyType.Descriptor instead.
func (Secret_KeyType) EnumDescriptor() ([]byte, []int) {
	return file_pqcwrappb_wrap_proto_rawDescGZIP(), []int{0, 0}
}

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type          Secret_KeyType         `protobuf:"varint,3,opt,name=type,proto3,enum=pqcwrappb.Secret_KeyType" json:"type,omitempty"`
	KemCipherText []byte                 `protobuf:"bytes,4,opt,name=kemCipherText,proto3" json:"kemCipherText,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	WrappedRawKey []byte                 `protobuf:"bytes,6,opt,name=wrappedRawKey,proto3" json:"wrappedRawKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_pqcwrappb_wrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_pqcwrappb_wrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_pqcwrappb_wrap_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Secret) GetType() Secret_KeyType {
	if x != nil {
		return x.Type
	}
	return Secret_ml_kem_512
}

func (x *Secret) GetKemCipherText() []byte {
	if x != nil {
		return x.KemCipherText
	}
	return nil
}

func (x *Secret) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Secret) GetWrappedRawKey() []byte {
	if x != nil {
		return x.WrappedRawKey
	}
	return nil
}

var File_pqcwrappb_wrap_proto protoreflect.FileDescriptor

var file_pqcwrappb_wrap_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x70, 0x71, 0x63, 0x77, 0x72, 0x61, 0x70, 0x70, 0x62, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x71, 0x63, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x62, 0x22, 0x8b, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x71, 0x63, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x6d,
	0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x6b, 0x65, 0x6d, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x61, 0x77, 0x4b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x52, 0x61, 0x77,
	0x4b, 0x65, 0x79, 0x22, 0x3a, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x6d, 0x6c, 0x5f, 0x6b, 0x65, 0x6d, 0x5f, 0x35, 0x31, 0x32, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x6d, 0x6c, 0x5f, 0x6b, 0x65, 0x6d, 0x5f, 0x37, 0x36, 0x38, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x6d, 0x6c, 0x5f, 0x6b, 0x65, 0x6d, 0x5f, 0x31, 0x30, 0x32, 0x34, 0x10, 0x02, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61,
	0x6c, 0x72, 0x61, 0x73, 0x68, 0x69, 0x64, 0x31, 0x32, 0x33, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x71,
	0x63, 0x2d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x71, 0x63, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pqcwrappb_wrap_proto_rawDescOnce sync.Once
	file_pqcwrappb_wrap_proto_rawDescData []byte
)

func file_pqcwrappb_wrap_proto_rawDescGZIP() []byte {
	file_pqcwrappb_wrap_proto_rawDescOnce.Do(func() {
		file_pqcwrappb_wrap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pqcwrappb_wrap_proto_rawDesc), len(file_pqcwrappb_wrap_proto_rawDesc)))
	})
	return file_pqcwrappb_wrap_proto_rawDescData
}

var file_pqcwrappb_wrap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pqcwrappb_wrap_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pqcwrappb_wrap_proto_goTypes = []any{
	(Secret_KeyType)(0), // 0: pqcwrappb.Secret.KeyType
	(*Secret)(nil),      // 1: pqcwrappb.Secret
}
var file_pqcwrappb_wrap_proto_depIdxs = []int32{
	0, // 0: pqcwrappb.Secret.type:type_name -> pqcwrappb.Secret.KeyType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pqcwrappb_wrap_proto_init() }
func file_pqcwrappb_wrap_proto_init() {
	if File_pqcwrappb_wrap_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pqcwrappb_wrap_proto_rawDesc), len(file_pqcwrappb_wrap_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pqcwrappb_wrap_proto_goTypes,
		DependencyIndexes: file_pqcwrappb_wrap_proto_depIdxs,
		EnumInfos:         file_pqcwrappb_wrap_proto_enumTypes,
		MessageInfos:      file_pqcwrappb_wrap_proto_msgTypes,
	}.Build()
	File_pqcwrappb_wrap_proto = out.File
	file_pqcwrappb_wrap_proto_goTypes = nil
	file_pqcwrappb_wrap_proto_depIdxs = nil
}
